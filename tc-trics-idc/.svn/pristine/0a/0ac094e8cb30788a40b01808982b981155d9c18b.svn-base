package com.manage.idc.system.service.impl;

import com.manage.idc.common.entiy.IdcConstant;
import com.manage.idc.common.entiy.SelectTreeEntity;
import com.manage.idc.common.entiy.Tree;
import com.manage.idc.common.utils.DataSetUtile;
import com.manage.idc.common.utils.IdGen;
import com.manage.idc.common.utils.SessionUtil;
import com.manage.idc.common.utils.TreeUtil;
import com.manage.idc.system.domain.SysMenu;
import com.manage.idc.system.domain.SysOrg;
import com.manage.idc.system.mapper.SysOrgMapper;
import com.manage.idc.system.service.SysOrgService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.*;

/**
 * @Description
 * @Author lyq_j
 * @DATE 2019/10/18 14:05
 **/
@Service
@Transactional
public class SysOrgServiceImpl implements SysOrgService {
    @Autowired
    private SysOrgMapper sysOrgMapper;

    @Override
    public void add(SysOrg sysOrg) {
        sysOrg.setId(IdGen.getUUId());
        sysOrg.setIsDel(IdcConstant.SYSTEM_ISDEL.NOT_DEL);
        sysOrg.setCreateTime(new Date());
        sysOrg.setUpdateTime(new Date());
        sysOrg.setFullCode(sysOrg.getParentFullCode()+"_"+sysOrg.getFullCode());
        sysOrgMapper.insertSelective(sysOrg);
    }

    @Override
    public void delete(SysOrg sysOrg) {
        sysOrg.setIsDel(IdcConstant.SYSTEM_ISDEL.DEL);
        sysOrgMapper.deleteOrg(sysOrg);
    }

    @Override
    public void update(SysOrg sysOrg) {
        sysOrg.setUpdateTime(new Date());
        sysOrgMapper.updateByPrimaryKeySelective(sysOrg);
    }

    @Override
    public Tree<SysOrg> getTree(SysOrg sysOrg) {
        sysOrg.setIsDel(IdcConstant.SYSTEM_ISDEL.NOT_DEL);
        List<SysOrg> sysOrgs = sysOrgMapper.selectByRegionList(sysOrg);
        List<Tree<SysOrg>> menuTrees = this.convertMenus(sysOrgs);
        return TreeUtil.buildMenuTree(menuTrees);
    }
    private List<Tree<SysOrg>> convertMenus(List<SysOrg> sysOrgs) {
        List<Tree<SysOrg>> trees = new ArrayList<>();
        sysOrgs.forEach(menu -> {
            Tree<SysOrg> tree = new Tree<>();
            tree.setId(String.valueOf(menu.getId()));
            tree.setParentId(String.valueOf(menu.getParentId()));
            tree.setTitle(menu.getName());
            tree.setData(menu);
            trees.add(tree);
        });
        return trees;
    }

    @Override
    public List<SysOrg> getOrgAll(SysOrg sysOrg) {
        sysOrg.setIsDel(IdcConstant.SYSTEM_ISDEL.NOT_DEL);
        return sysOrgMapper.getOrgAll(sysOrg);
    }

    /*
     * @Description: 获取机构树形下拉框
     * @Author: WangZiFan
     * @Date: 2019/10/29 16:52
     * @param
     * @return java.util.List<com.manage.idc.common.entiy.SelectTreeEntity>
     */
    @Override
    public List<Tree> getOrgSelectTree(String regioneId) {
        Map<String, Object> map = new HashMap<>();
        map.put("regioneId",regioneId);
        return sysOrgMapper.getOrgSelectTree(DataSetUtile.setQueryMap(map,null, SessionUtil.getUser()));
    }

    @Override
    public List<SysOrg> getList(SysOrg sysOrg) {
        return sysOrgMapper.getList(sysOrg);
    }
}
