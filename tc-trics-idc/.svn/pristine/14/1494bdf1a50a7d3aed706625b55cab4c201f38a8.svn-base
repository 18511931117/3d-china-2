layui.use('table', function(){
    var table = layui.table;

    // table.render({
    //     elem: '#test'
    //     ,url:'/role/getPage'
    //     ,title: '用户数据表'
    //     ,cols: [[
    //         {type: 'checkbox'},
    //         {field: 'id', title: 'ID',}
    //         , {field: 'roleName', title: '角色名'}
    //         , {field: 'remark', title: '具体描述'}
    //         , {field: 'createTime', title: '创建时间' ,templet: function(d){
    //                 var dateee = new Date(d.createTime).toJSON();
    //                 var date = new Date(+new Date(dateee)+8*3600*1000).toISOString().replace(/T/g,' ').replace(/\.[\d]{3}Z/,'');
    //                 return date;
    //             }
    //
    //         },
    //         {field: '操作', title: '操作', width: 240, toolbar: '#barDemo'}
    //     ]]
    //     ,page: true
    // });

    $("#searchbtn").on('click',function () {
        refreshTable();
    })
    function refreshTable() {
        table.reload("test",{
            page: {
                curr: 1 //重新从第 1 页开始
            },
            where: {
                roleName: $("#roleName").val(),
            }
        })
    }
    layui.use(['tree', 'util'], function(){
    //监听行工具事件
    table.on('tool(test)', function(obj){
        var data = obj.data;
        //console.log(obj)
        if(obj.event === 'edit'){
            $("#id").val(data.id);
            $("#name").val(data.roleName);
            $("#remark").val(data.remark);
            loadTree(data.id)
        }
        /**
         * 修改弹框加载tree
         */
        function loadTree(roleId){
            $.ajax({
                url:  "/menu/getTree",
                type: "GET",
                data:{
                    roleId:roleId
                },
                cache:false,
                dataType: "json",
                success: function(data){
                    if(data.code=="0"){
                        buildTreeEdit(data.data)
                    }
                },
                error:function(err){
                    layer.msg("服务器内部错误！")
                }
            });
        }
    });

    var tree = layui.tree,
        layer = layui.layer,
        util = layui.util

    $("#myModal").on("show.bs.modal",function(){
        $.ajax({
            url:  "/menu/getTree",
            type: "GET",
            data:{
            },
            cache:false,
            dataType: "json",
            success: function(data){
                if(data.code=="0"){
                    //buildTreeAdd(data.data)
                    $('#treeData').treeview({
                        data: data.data,
                        showCheckbox: 1,
                        onNodeChecked: function(event, node) { //选中节点
                            var selectNodes = getChildNodeIdArr(node); //获取所有子节点
                            if (selectNodes) { //子节点不为空，则选中所有子节点
                                $('#treeData').treeview('checkNode', [selectNodes, { silent: true }]);
                            }
                            var parentNode = $("#treeData").treeview("getNode", node.parentId);
                            setParentNodeCheck(node);
                        },
                        onNodeUnchecked: function(event, node) { //取消选中节点
                            var selectNodes = getChildNodeIdArr(node); //获取所有子节点
                            if (selectNodes) { //子节点不为空，则取消选中所有子节点
                                $('#treeData').treeview('uncheckNode', [selectNodes, { silent: true }]);
                            }
                        }
                    });
                }
            },
            error:function(err){
                layer.msg("服务器内部错误！")
            }
        });
    })

        $("#editModal").on("show.bs.modal",function(){
            $.ajax({
                url:  "/menu/getTree",
                type: "GET",
                data:{
                },
                cache:false,
                dataType: "json",
                success: function(data){
                    if(data.code=="0"){
                        //buildTreeAdd(data.data)
                        $('#editTree').treeview({
                            data: data.data,
                            showCheckbox: 1,
                            onNodeChecked: function(event, node) { //选中节点
                                var selectNodes = getChildNodeIdArr(node); //获取所有子节点
                                if (selectNodes) { //子节点不为空，则选中所有子节点
                                    $('#editTree').treeview('checkNode', [selectNodes, { silent: true }]);
                                }
                                var parentNode = $("#editTree").treeview("getNode", node.parentId);
                                setParentNodeCheck(node);
                            },
                            onNodeUnchecked: function(event, node) { //取消选中节点
                                var selectNodes = getChildNodeIdArr(node); //获取所有子节点
                                if (selectNodes) { //子节点不为空，则取消选中所有子节点
                                    $('#editTree').treeview('uncheckNode', [selectNodes, { silent: true }]);
                                }
                            }
                        });
                    }
                },
                error:function(err){
                    layer.msg("服务器内部错误！")
                }
            });
        })

        function getChildNodeIdArr(node) {
            var ts = [];
            if (node.nodes) {
                for (x in node.nodes) {
                    ts.push(node.nodes[x].nodeId);
                    if (node.nodes[x].nodes) {
                        var getNodeDieDai = getChildNodeIdArr(node.nodes[x]);
                        for (j in getNodeDieDai) {
                            ts.push(getNodeDieDai[j]);
                        }
                    }
                }
            } else {
                ts.push(node.nodeId);
            }
            return ts;
        }

        function setParentNodeCheck(node) {
            var parentNode = $("#treeData").treeview("getNode", node.parentId);
            if (parentNode.nodes) {
                var checkedCount = 0;
                for (x in parentNode.nodes) {
                    if (parentNode.nodes[x].state.checked) {
                        checkedCount ++;
                    } else {
                        break;
                    }
                }
                if (checkedCount === parentNode.nodes.length) {
                    $("#treeData").treeview("checkNode", parentNode.nodeId);
                    setParentNodeCheck(parentNode);
                }
            }
        }
    function buildTreeAdd(data) {
        //基本演示
        tree.render({
            elem: '#treeData'
            ,data: data
            ,showCheckbox: true  //是否显示复选框
            ,id: 'tree',
            showLine: false
        });
    }
        function buildTreeEdit(data) {
            //基本演示
            tree.render({
                elem: '#editTree'
                ,data: data
                ,showCheckbox: true  //是否显示复选框
                ,id: 'editTree',
                showLine: false
            });
        }

    $("#editRole").on("click",function () {
        debugger;
        var id =$("#id").val();

        var roleName=$("#name").val();
        if(roleName==""){
            layer.msg("请输入角色名称！！")
            $("#name").focus()
            return;
        }
        const remark = $("#remark").val();
        if(remark===""){
            layer.msg("请输入角色备注！！")
            $("#remark").focus()
            return;
        }

        //$('#tree').treeview({data: getTree()});
        //获得选中的节点
        //var checkData = tree.getChecked('editTree');
        var checkData = $('#editTree').treeview('getChecked');
        if(checkData==""){
            layer.msg("请选择角色权限！！")
            return;
        }
        var menuIds='';
        checkData.forEach((item, index, arr) => {
            console.log(item)
            menuIds+=item.id+","
        });
        menuIds = menuIds.substr(0, menuIds.length - 1);

        $.ajax({
            url:  "/role/update",
            type: "POST",
            data:{
                id:id,
                roleName:roleName,
                remark:remark,
                menuIds:menuIds
            },
            cache:false,
            dataType: "json",
            success: function(data){
                layer.msg(data.message);
                if(data.code=="0"){
                    setTimeout("javascript:location.href='/role'", 1500);
                }
            },
            error:function(err){
                layer.msg("服务器内部错误！")
            }
        });
    })


    $("#addRole").on("click",function () {
        var roleName=$("#rname").val();
        if(roleName==""){
            layer.msg("请输入角色名称！！")
            $("#rname").focus()
            return;
        }
        var remark=$("#rremark").val();
        if(remark==""){
            layer.msg("请输入角色备注！！")
            $("#remark").focus()
            return;
        }
        //获得选中的节点
        //var checkData = tree.getChecked('tree');
        var checkData = $('#treeData').treeview('getChecked');

        if(checkData==""){
            layer.msg("请选择角色权限！！")
            return;
        }
        var menuIds='';
        checkData.forEach((item, index, arr) => {
            console.log(item)
            menuIds+=item.id+","
        });
        menuIds = menuIds.substr(0, menuIds.length - 1);
        $.ajax({
            url:  "/role/add",
            type: "POST",
            data:{
                roleName:roleName,
                remark:remark,
                menuIds:menuIds
            },
            cache:false,
            dataType: "json",
            success: function(data){
                layer.msg(data.message);
                if(data.code=="0"){
                    setTimeout("javascript:location.href='/role'", 1500);
                }
            },
            error:function(err){
                layer.msg("服务器内部错误！")
            }
        });

    })



});
});

window.operateEvents = {
    // 角色修改
    'click #edit': function (e, value, row, index) {
        var vals = [];
        // var x=0;//记录选中的数据下标值，从0开始
        $('input:checkbox:checked').each(function (index, item) {
                vals.push($(this).val());
            }
        );
        if(vals.length<1||vals.length>=2) {
            $("#edit").removeAttr("data-target");
            alert("请选择一条数据");
        } else {
            //回显数据
            var userArr=new Array();
            var i=0;
            $('input:checkbox:checked').parent().siblings().each(function (index) {
                userArr[i++]=$(this).text()
            })
            $("input[id='id']").val(userArr[0]);
            $("input[id='name']").val(userArr[1]);
            $("textarea[id='remark']").val(userArr[2]);
            //$("checkbox[id='editTree']").val(userArr[3]);
            //数据显示在模态框
            $('#editModal').modal('show')
        }
        /*$.ajax({
            url:  "/role/delete",
            type: "POST",
            data:{
                id:row.id
            },
            cache:false,
            dataType: "json",
            success: function(data){
                alert(data.message);
                if(data.code=="0"){
                    //layer.close(index);
                    setTimeout("javascript:location.href='/role'", 1500);
                }
            },
            error:function(err){
                layer.msg("服务器内部错误！")
            }
        });*/
    },
    // 角色删除
    'click #del': function (e, value, row, index) {
        $.ajax({
            url:  "/role/delete",
            type: "POST",
            data:{
                id:row.id
            },
            cache:false,
            dataType: "json",
            success: function(data){
                alert(data.message);
                if(data.code=="0"){
                    //layer.close(index);
                    setTimeout("javascript:location.href='/role'", 1500);
                }
            },
            error:function(err){
                layer.msg("服务器内部错误！")
            }
        });
    }
};

function addFunctionAlty(value, row, index) {
    return [
        '<button id="edit" type="button" data-toggle="modal" class="btn bg-bold table-btn">编辑</button>',
        '<button id="del" type="button" class="btn bg-bold table-btn">删除</button>'
    ].join('');
}

$('#test').bootstrapTable({
    url: ctxPath+'role/getPage',
    method: 'GET',
    uniqueId: 'id',                        // 绑定ID，不显示
    striped: false,                         //是否显示行间隔色
    cache: false,                          //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
    sortable: true,                        //是否启用排序
    sidePagination: "server",              //分页方式：client客户端分页，server服务端分页（*）
    undefinedText: '--',
    strictSearch: true,
    clickToSelect: true,                   // 点击选中行
    pagination: true,                      //是否显示分页
    pageNumber:1,                          //初始化加载第一页，默认第一页,并记录
    pageSize:10,//每页显示的数量
    pageList: [ 10, 20, 50, 100],//设置每页显示的数量
    paginationPreText:"上一页",
    paginationNextText:"下一页",
    paginationLoop:false,
    //得到查询的参数
    queryParams : function (params) {
        //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
        var temp = {
            limit: params.limit,                         //页面大小
            page: (params.offset / params.limit) + 1,   //页码
            sort: params.sort,      //排序列名
            sortOrder: params.order //排位命令（desc，asc）
        };
        return temp;
    },
    columns:
        [{checkbox: true,width: 50}
            ,{field:'id',title: 'ID', }
            ,{field:'roleName',title: '角色名称', }
            ,{field:'remark', title: '角色备注'}
            ,{field:'createTime', title: '创建时间', }
            ,{field:'barcode', title: '操作',events: operateEvents,formatter: addFunctionAlty, }//表格中增加按钮
        ]
});
