<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manage.idc.log.mapper.OperationLogMapper">
  <resultMap id="BaseResultMap" type="com.manage.idc.log.domain.SystemLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="path" jdbcType="LONGVARCHAR" property="path" />
    <result column="method" jdbcType="LONGVARCHAR" property="method" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="input" jdbcType="LONGVARCHAR" property="input" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, org_id, user_id, `path`, `method`, ip, `input`, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operation_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from operation_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.manage.idc.log.domain.SystemLog" useGeneratedKeys="true">
    insert into operation_log (org_id, user_id, `path`, 
      `method`, ip, `input`, 
      create_time, update_time)
    values (#{orgId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{path,jdbcType=LONGVARCHAR},
      #{method,jdbcType=LONGVARCHAR}, #{ip,jdbcType=VARCHAR}, #{input,jdbcType=LONGVARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.manage.idc.log.domain.SystemLog" useGeneratedKeys="true">
    insert into operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="method != null">
        `method`,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="input != null">
        `input`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        #{path,jdbcType=LONGVARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=LONGVARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="input != null">
        #{input,jdbcType=LONGVARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.manage.idc.log.domain.SystemLog">
    update operation_log
    <set>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=LONGVARCHAR},
      </if>
      <if test="method != null">
        `method` = #{method,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="input != null">
        `input` = #{input,jdbcType=LONGVARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.manage.idc.log.domain.SystemLog">
    update operation_log
    set org_id = #{orgId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      `path` = #{path,jdbcType=LONGVARCHAR},
      `method` = #{method,jdbcType=LONGVARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      `input` = #{input,jdbcType=LONGVARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByCondition" parameterType="map" resultMap="BaseResultMap">
    SELECT
	    ol.*,
	    so.name orgName,
	    su.name userName
    FROM
	    operation_log ol
    LEFT JOIN sys_org so ON ol.org_id = so.id
    LEFT JOIN sys_user su ON ol.user_id = su.id
    <where>
      <if test="fullCode != null">
        and so.full_code like concat('',#{fullCode},'%')
      </if>
    </where>
    ORDER BY create_time DESC
  </select>

  <select id="selectList"   resultMap="BaseResultMap">
    SELECT
	    ol.*,
	    so.name orgName,
	    su.name userName
    FROM
	    operation_log ol
    LEFT JOIN sys_org so ON ol.org_id = so.id
    LEFT JOIN sys_user su ON ol.user_id = su.id
    <where>
      <if test="orgId != null">
        (so.parent_id=#{orgId} or so.id=#{orgId})
      </if>
    </where>
    ORDER BY create_time DESC
  </select>

  <select id="selectExportList"   resultType="java.util.List" resultMap="BaseResultMap">
    SELECT
    ol.*,
    so.name orgName,
    su.name userName
    FROM
    operation_log ol
    LEFT JOIN sys_org so ON ol.org_id = so.id
    LEFT JOIN sys_user su ON ol.user_id = su.id
    <where>
     ol.id in
      <foreach collection="list" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
    </where>

  </select>
</mapper>