<!DOCTYPE html>
<html lang="en" xmlns:th="https://www.thymeleaf.org">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="Mosaddek">
    <meta name="keyword" content="FlatLab, Dashboard, Bootstrap, Admin, Template, Theme, Responsive, Fluid, Retina">
    <link rel="shortcut icon" th:href="@{/img/favicon.html}">

    <title>江苏有线三网融合扭曲中心数据中心-设备线缆管理系统</title>

    <!-- Bootstrap core CSS -->
    <link th:href="@{/css/bootstrap.min.css}" rel="stylesheet">
    <link th:href="@{/css/bootstrap-reset.css}" rel="stylesheet">
    <!--external css-->
    <link th:href="@{/assets/font-awesome/css/font-awesome.css}" rel="stylesheet" />
    <link th:href="@{/assets/jquery-easy-pie-chart/jquery.easy-pie-chart.css}" rel="stylesheet" type="text/css" media="screen"/>
    <link rel="stylesheet" th:href="@{/css/owl.carousel.css}" type="text/css">
    <!-- Custom styles for this template -->
    <link th:href="@{/css/style.css}" rel="stylesheet">
    <link th:href="@{/css/style-responsive.css}" rel="stylesheet" />

    <link th:href="@{/3rd/webgl/css/page.css}" rel="stylesheet">


    <script type="text/javascript" th:src="@{/3rd/webgl/js/three.min.js}"></script>
    <!--<script type="text/javascript" th:src="@/js/jquery-2.1.0.js}"></script>-->
    <script type="text/javascript" th:src="@{/3rd/webgl/js/D.min.js}"></script>
    <script type="text/javascript" th:src="@{/3rd/webgl/js/doT.min.js}"></script>
    <!--<script type="text/javascript" th:src="@/js/photo-sphere-viewer.min.js}"></script>-->
    <script type="text/javascript" th:src="@{/3rd/webgl/js/WebGL.js}"></script>
    <script type="text/javascript" th:src="@{/3rd/webgl/js/OrbitControls.js}"></script>
    <script type="text/javascript" th:src="@{/3rd/webgl/js/stats.min.js}"></script>

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 tooltipss and media queries -->
    <!--[if lt IE 9]>
    <script th:src="@{/js/html5shiv.js}"></script>
    <script th:src="@{/js/respond.min.js}"></script>
    <![endif]-->
</head>

<body>
<div class="row">
    <div class="col-sm-8">
        <!--new earning start-->
        <div class="row">
            <div class="col-sm-7">
                <div class="row">
                    <div class="col-sm-6">
                        <div style="width:100%; height: 200px;background: #fff;margin-bottom: 15px;border-radius: 5px">
                            <div class="title1" style="font-size: 18px;padding: 10px 5px">
                                设备状态
                            </div>
                            <div class="zhuangtai" id="zhuangtai" style="width: 90%;height: 150px"></div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div style="width:100%; height: 200px;background: #fff;margin-bottom: 15px;border-radius: 5px">
                            <div class="title1" style="font-size: 18px;padding: 10px 5px">
                                设备维修
                            </div>
                            <div class="weixiu" id="weixiu" style="width: 90%;height: 150px"></div>
                        </div>
                    </div>
                </div>
                <div class="row-fulid">
                    <div style="width:100%; height: 185px;background: #fff;margin-bottom:15px;border-radius: 5px;">
                        <div class="title1" style="font-size: 18px;padding: 10px 5px">
                            设备报废
                        </div>
                        <div class="baofei" id="baofei" style="width: 100%;height: 150px"></div>
                    </div>

                </div>
            </div>
            <div class="col-sm-5">
                <div class="lbox1_r" style="background: #fff;padding: 0 15px;height: 400px">
                    <div class="title1">
                        <img th:src="@{/img/imgf7.jpg}" width="20"><span id="p0" style="display: inline-block;font-size: 18px">江苏省 JiangSu</span>
                    </div>
                    <div class="row lbox1_r_con">
                        <div class="row-fluid col-sm-6 divxa">
                            <div class="divx1">
                                <div class="divx1_l">
                                    <img th:src="@{/img/imgf1.jpg}" width="51">
                                </div>
                                <div class="divx1_2">
                                    <p class="p1" id="num1">38</p>
                                    <p class="p2">在线设备</p>
                                </div>
                            </div>
                        </div>
                        <div class="row-fluid col-sm-6 divxb">
                            <div class="divx1">
                                <div class="divx1_l">
                                    <img th:src="@{/img/imgf2.jpg}" width="51">
                                </div>
                                <div class="divx1_2">
                                    <p class="p1" id="num2">6</p>
                                    <p class="p2">机房数量</p>
                                </div>
                            </div>
                        </div>
                        <div class="row-fluid col-sm-6 divxa">
                            <div class="divx1">
                                <div class="divx1_l">
                                    <img th:src="@{/img/imgf3.jpg}" width="51">
                                </div>
                                <div class="divx1_2">
                                    <p class="p1" id="num3">15</p>
                                    <p class="p2">机架数量</p>
                                </div>
                            </div>
                        </div>
                        <div class="row-fluid col-sm-6 divxb">
                            <div class="divx1">
                                <div class="divx1_l">
                                    <img th:src="@{/img/imgf4.jpg}" width="51">
                                </div>
                                <div class="divx1_2">
                                    <p class="p1" id="num4">13</p>
                                    <p class="p2">设备分类</p>
                                </div>
                            </div>
                        </div>
                        <div class="row-fluid col-sm-6 divxa">
                            <div class="divx1">
                                <div class="divx1_l">
                                    <img th:src="@{/img/imgf5.jpg}" width="51">
                                </div>
                                <div class="divx1_2">
                                    <p class="p1" id="num5">15</p>
                                    <p class="p2">行政部门</p>
                                </div>
                            </div>
                        </div>
                        <div class="row-fluid col-sm-6 divxb">
                            <div class="divx1">
                                <div class="divx1_l">
                                    <img th:src="@{/img/imgf6.jpg}" width="51">
                                </div>
                                <div class="divx1_2">
                                    <p class="p1" id="num6">0</p>
                                    <p class="p2">地市级</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!--new earning end-->

        <!--total earning start-->

        <!--total earning end-->
    </div>
    <div class="col-sm-4">
        <!--custom chart start-->
        <div style="width:100%; height: 400px;background: #fff;margin-bottom: 15px;border-radius: 5px">
            <div style="font-size: 18px;padding:10px 5px">江苏省区域地图</div>
            <div id="mapadd" style="width: 90%;height: 370px"></div>
        </div>
        <!--custom chart end-->
    </div>
</div>
<div class="row">
    <div class="col-lg-8">
        <!--work progress start-->
        <div style="width: 100%;height: 350px;background: #fff;margin-bottom:15px;border-radius: 5px;">
            <div class="title1" style="padding: 5px">
                设备统计曲线图
            </div>
            <div class="weixiuqu" id="weixiuqu" style="width: 90%;height: 290px"></div>
        </div>
        <!--work progress end-->
    </div>
    <div class="col-lg-4">
        <!--user info table start-->
        <section class="panel" id="panel">
            <div class="title1" style="padding: 5px">
                机房3D视图
            </div>
            <div id="container2" style="padding: 10px">
                <img id="clickfile" th:src="@{/3rd/webgl/img/icon_cell.png}" style="display: none;position: absolute;bottom: 3rem;right: 1rem;" />

                <input type="file" name="pano" id="pano" style="display: none;" />
                <ul id="myList" class="imagelist">
                    <li>
                        <img id="0" class="meun_img" th:src="@{/3rd/webgl/img/sun.jpg}" />
                    </li>
                    <li>
                        <img id="1" class="meun_img" th:src="@{/3rd/webgl/img/banner1.jpg}" />
                    </li>
                    <li>
                        <img id="2" class="meun_img" th:src="@{/3rd/webgl/img/banner2.jpg}" />
                    </li>
                    <li>
                        <img id="3" class="meun_img" th:src="@{/3rd/webgl/img/banner3.jpg}" />
                    </li>
                </ul>
            </div>
        </section>
        <!--user info table end-->
    </div>

</div>
<!-- js placed at the end of the document so the pages load faster -->
<script th:src="@{/js/jquery.js}"></script>
<script th:src="@{/js/jquery-1.8.3.min.js}"></script>
<script th:src="@{/js/bootstrap.min.js}"></script>
<script th:src="@{/js/jquery.scrollTo.min.js}"></script>
<script th:src="@{/js/jquery.nicescroll.js}" type="text/javascript"></script>
<script th:src="@{/js/jquery.sparkline.js}" type="text/javascript"></script>
<script th:src="@{assets/jquery-easy-pie-chart/jquery.easy-pie-chart.js}"></script>
<script th:src="@{/js/owl.carousel.js}" ></script>
<script th:src="@{/js/jquery.customSelect.min.js}" ></script>

<!--common script for all pages-->
<script th:src="@{/js/common-scripts.js}"></script>

<!--script for this page-->
<script th:src="@{/js/map/echarts.min.js}"></script>
<script th:src="@{/js/map/jiangsu.js}"></script>
<script th:src="@{/js/map/index.js}"></script>
<!--    <script th:src="@/js/sparkline-chart.js}"></script>-->
<!--    <script th:src="@/js/easy-pie-chart.js}"></script>-->
<script id="vertexShader" type="x-shader/x-vertex">
			varying vec2 vUv; void main() { vUv = uv; vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 ); gl_Position = projectionMatrix * mvPosition; }
		</script>

<script id="fragmentShader" type="x-shader/x-fragment">

			precision mediump float; uniform float time; uniform float scale; uniform bool isoriginColor; uniform sampler2D texture3; uniform sampler2D texture4; varying vec2 vUv; void main( void ) { vec2 position = - 1.0 + 2.0 * vUv; vec4 color3 = texture2D( texture3, vUv ); vec3 tarcolor =color3.rgb; float f1 =color3.a*scale; vec4 color4 = texture2D( texture4, vUv ); float subscale=1.0-scale; float f2 =color4.a*subscale; if(isoriginColor == false){ tarcolor =mix(tarcolor.rgb,color4.rgb,f2); } gl_FragColor = vec4(tarcolor,1); }
		</script>
<script>
    //获取父级div 宽度
    var panel = document.getElementById("panel")
    var p = panel.clientWidth-20

    // 摄像机   ，场景   ，渲染器   ,   资源加载器
    var camera, scene, renderer, textureLoader;
    //图片集合
    var imgs = ["@{/3rd/webgl/img/sun.jpg", "@{/3rd/webgl/img/banner1.jpg", "@{/3rd/webgl/img/banner2.jpg", "@{/3rd/webgl/img/banner3.jpg"];
    //当前显示图片集合
    var child = 0;
    //是否启动混合替换
    var isupdata = false;
    //shader 参数
    var uniforms;
    //渲染计时
    var interval = 0;
    //递增混合阶段值
    var count = 0;
    var dialog, btnclose, btncommit;

    var isUserInteracting = false,
        onMouseDownMouseX = 0,
        onMouseDownMouseY = 0,
        lon = 0,
        onMouseDownLon = 0,
        lat = 0,
        onMouseDownLat = 0,
        phi = 0,
        theta = 0;

    init();
    animate();
    menuClick();

    function menuClick() {
        var list = document.getElementById('myList');
        var listChild = document.getElementsByTagName('li');
        for(var i = 0; i < listChild.length; i++) {
            listChild[i].addEventListener('click', function() {
                var id = this.children[0].id;
                if(child != id && count == 0) {
                    uniforms.texture3.value = getTextureLoader(child);
                    uniforms.texture4.value = getTextureLoader(id);
                    child = id;
                    isupdata = true;
                } else {

                }

            }, false);
        }
    }

    function init() {

        var container;
        dialog = document.getElementById("dialog");
        btnclose = document.getElementById("btnclose");
        btncommit = document.getElementById("btncommit");
        container = document.getElementById('container2');
        //新建一个相机
        camera = new THREE.PerspectiveCamera(75, p / 350, 1, 1100);
        camera.target = new THREE.Vector3(0, 0, 0);
        //创建一个WebGL渲染器
        renderer = new THREE.WebGLRenderer();
        renderer.setPixelRatio(window.devicePixelRatio);
        renderer.setSize(p, 350);

        container.appendChild(renderer.domElement);
        //新建一个场景
        scene = new THREE.Scene();
        //初始化加载器
        textureLoader = new THREE.TextureLoader();
        for(var i = 0, len = imgs.length; i < len; i++) {

            setMeshChild(imgs[i]);
        }

        document.addEventListener('mousedown', onPointerStart, false);
        document.addEventListener('mousemove', onPointerMove, false);
        document.addEventListener('mouseup', onPointerUp, false);

        document.addEventListener('wheel', onDocumentMouseWheel, false);

        document.addEventListener('touchstart', onPointerStart, false);
        document.addEventListener('touchmove', onPointerMove, false);
        document.addEventListener('touchend', onPointerUp, false);
        document.addEventListener("dblclick", onDocumentMouseDown, false);
        //

        document.addEventListener('dragover', function(event) {

            event.preventDefault();
            event.dataTransfer.dropEffect = 'copy';

        }, false);

        document.addEventListener('dragenter', function() {

            document.body.style.opacity = 0.5;

        }, false);

        document.addEventListener('dragleave', function() {

            document.body.style.opacity = 1;

        }, false);

        //

        window.addEventListener('resize', onWindowResize, false);

    }

    function showDialog(clicklistener) {
        console.log(dialog.style);
        if(dialog.style.display != "block") {
            dialog.style.display = "block";
        }
        btncommit.addEventListener("click", function(event) {
            event.preventDefault();
            dialog.style.display = "none";
            clicklistener(true);
            return false;
        })
        btnclose.addEventListener("click", function(event) {
            event.preventDefault();
            dialog.style.display = "none";
            clicklistener(false);
            return false;
        })

    }
    /**
     * 获取三维坐标
     * @param {Object} event
     */
    function onDocumentMouseDown(event) {
        event.preventDefault();
        var vector = new THREE.Vector3(); //三维坐标对象
        vector.set(
            (event.clientX / p) * 2 - 1, -(event.clientY / 350) * 2 + 1,
            0.5);
        vector.unproject(camera);
        var raycaster = new THREE.Raycaster(camera.position, vector.sub(camera.position).normalize());
        var intersects = raycaster.intersectObjects(scene.children);
        if(intersects.length > 0) {
            var selected = intersects[0]; //取第一个物体
            console.log("x坐标:" + selected.point.x);
            console.log("y坐标:" + selected.point.y);
            console.log("z坐标:" + selected.point.z);
            var x = selected.point.x;
            var y = selected.point.y;
            var z = selected.point.z;
            showDialog(function(state) {
                if(state) {
                    addLabelMarker(x, y, z, "img/icon_cell.png");
                } else {
                    console.log("取消添加");
                }
            });

        }
    }
    /**
     *
     * @param {Object} x
     * @param {Object} y
     * @param {Object} z
     * @param {Object} element
     * @param {Object} listener
     */
    function addLabelMarker(x, y, z, imgUrl) {
        var map = new THREE.TextureLoader().load(imgUrl);
        map.wrapS = map.wrapT = THREE.RepeatWrapping;
        map.anisotropy = 16;
        var material = new THREE.MeshPhongMaterial({
            map: map,
            side: THREE.DoubleSide
        });
        var geometry = new THREE.SphereBufferGeometry(20, 20, 20);
        // invert the geometry on the x-axis so that all of the faces point inward
        geometry.scale(-1, 1, 1);
        //
        var mesh = new THREE.Mesh(geometry, material);
        mesh.position.set(x, y, z);
        //添加灯光
        var light = new THREE.PointLight(0xffffff, 1, 100);
        light.position.set(x, y, z);
        scene.add(light);
        scene.add(mesh);

    }

    function setMeshChild(url) {
        var geometry = new THREE.SphereBufferGeometry(500, 60, 40); // invert the geometry on the x-axis so that all of the faces point inward
        geometry.scale(-1, 1, 1);

        uniforms = {
            time: {
                value: 1.0
            },
            scale: {
                value: 1.0
            },
            texture3: {
                value: getTextureLoader(0)
            },
            texture4: {
                value: getTextureLoader(1)
            }
        };
        var material = new THREE.ShaderMaterial({
            uniforms: uniforms,
            vertexShader: document.getElementById('vertexShader').textContent,
            fragmentShader: document.getElementById('fragmentShader').textContent
        });

        //网格
        var mesh = new THREE.Mesh(geometry, material);

        scene.add(mesh);

        document.addEventListener('drop', function(event) {

            event.preventDefault();

            var reader = new FileReader();
            reader.addEventListener('load', function(event) {
                material.map.image.src = event.target.result;
                material.map.needsUpdate = true;

            }, false);
            reader.readAsDataURL(event.dataTransfer.files[0]);

            document.body.style.opacity = 1;

        }, false);

    }

    function getTextureLoader(index) {
        return textureLoader.load(imgs[index]);
    }
    /**
     * 缩放大小
     */
    function onWindowResize(event) {

        camera.aspect = p / 350;
        camera.updateProjectionMatrix();

        renderer.setSize(p, 350);

    }
    /**
     * 按下 鼠标 或则 触摸
     * @param {Object} event
     */
    function onPointerStart(event) {

        isUserInteracting = true;

        var clientX = event.clientX || event.touches[0].clientX;
        var clientY = event.clientY || event.touches[0].clientY;

        onMouseDownMouseX = clientX;
        onMouseDownMouseY = clientY;

        onMouseDownLon = lon;
        onMouseDownLat = lat;

    }
    /**
     * 移动
     * @param {Object} event
     */
    function onPointerMove(event) {

        if(isUserInteracting === true) {

            var clientX = event.clientX || event.touches[0].clientX;
            var clientY = event.clientY || event.touches[0].clientY;

            lon = (onMouseDownMouseX - clientX) * 0.1 + onMouseDownLon;
            lat = (clientY - onMouseDownMouseY) * 0.1 + onMouseDownLat;

        }

    }

    function onPointerUp() {

        isUserInteracting = false;

    }

    function onDocumentMouseWheel(event) {

        var fov = camera.fov + event.deltaY * 0.05;

        camera.fov = THREE.Math.clamp(fov, 10, 75);

        camera.updateProjectionMatrix();

    }

    function animate(timestamp) {
        requestAnimationFrame(animate);
        uniforms.time.value = timestamp / 1000;

        if(timestamp - interval > 200 && isupdata) {
            if(count <= 20) {
                var scale = 1.0 - (0.05 * count);
                uniforms.scale.value = scale;
                count++;
            } else {
                isupdata = false;
                count = 0;
            }
            interval = timestamp
        }

        update();

    }

    function update() {

        if(isUserInteracting === false) {

            lon += 0.1;

        }

        lat = Math.max(-85, Math.min(85, lat));
        phi = THREE.Math.degToRad(90 - lat);
        theta = THREE.Math.degToRad(lon);

        camera.target.x = 500 * Math.sin(phi) * Math.cos(theta);
        camera.target.y = 500 * Math.cos(phi);
        camera.target.z = 500 * Math.sin(phi) * Math.sin(theta);

        camera.lookAt(camera.target);
        //将场景渲染到摄像机
        renderer.render(scene, camera);

    }




    // $('#sidebar-collapse').click(function (){
    //     setTimeout(function () { doresize(); }, 50);
    //     if($('#navbar').hasClass("top-min")){
    //         $('#navbar').removeClass("top-min");
    //     }else{
    //         $('#navbar').addClass("top-min");
    //
    //     }
    //
    // });
    var arr2_1=["product", "2014", "2015", "2016", "2017", "2018","2019"];
    var arr2_2=["设备维修","0","0","0","0","0","0"];
    var arr2_3=["设备报废","0","0","0","0","0","0"];
    var arr2_4=["设备调拨","0","0","0","0","0","0"];
    var arr2_5=["设备借用","0","0","0","0","0","0"];
    quX(arr2_1,arr2_2,arr2_3,arr2_4,arr2_5);//维修曲线
    //饼图
    zhuangT()
    weiX()
    baoF()
    function zhuangT() {
        var myCharts1 = echarts.init(document.getElementById('zhuangtai'));
        option = {
            tooltip : {
                trigger: 'item',
                formatter: "{a} <br/>{b} : {c} ({d}%)"
            },
            legend: {

                orient: 'horizontal',

                left: 'center',
                itemwidth: 2,
                itemheight:2,
                itemGap:2,
                data: ['调拨','维修','借用']
            },
            series : [
                {
                    name: '访问来源',
                    type: 'pie',
                    radius : '55%',
                    center: ['50%', '60%'],
                    data:[
                        {value:335, name:'调拨'},
                        {value:310, name:'维修'},
                        {value:234, name:'借用'},
                    ],
                    itemStyle: {
                        emphasis: {
                            shadowBlur: 10,
                            shadowOffsetX: 0,
                            shadowColor: 'rgba(0, 0, 0, 0.5)'
                        }
                    }
                }
            ]
        };
        myCharts1.setOption(option);
    }
    function weiX() {
        var myCharts1 = echarts.init(document.getElementById('weixiu'));
        option = {
            tooltip : {
                trigger: 'item',
                formatter: "{a} <br/>{b} : {c} ({d}%)"
            },
            legend: {

                orient: 'horizontal',

                left: 'center',
                itemwidth: 2,
                itemheight:2,
                itemGap:2,
                data: ['在线','维修','报废']
            },
            series : [
                {
                    name: '访问来源',
                    type: 'pie',
                    radius : '55%',
                    center: ['50%', '60%'],
                    data:[
                        {value:335, name:'在线'},
                        {value:310, name:'维修'},
                        {value:234, name:'报废'},
                    ],
                    itemStyle: {
                        emphasis: {
                            shadowBlur: 10,
                            shadowOffsetX: 0,
                            shadowColor: 'rgba(0, 0, 0, 0.5)'
                        }
                    }
                }
            ]
        };
        myCharts1.setOption(option);
    }
    function baoF() {
        var baofei = echarts.init(document.getElementById('baofei'));
        option = {
            color: ['#3398DB'],
            tooltip : {
                trigger: 'axis',
                axisPointer : {            // 坐标轴指示器，坐标轴触发有效
                    type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                }
            },
            grid: {
                left: '3%',
                right: '4%',
                bottom: '6%',
                top:'3%',
                containLabel: true
            },
            xAxis : [
                {
                    type : 'category',
                    data : ["2013", "2014", "2015", "2016", "2017", "2018", "2019"],
                    axisTick: {
                        alignWithLabel: true
                    },
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color:'#999',
                            width:'1'
                        }
                    },
                    axisLabel: {
                        textStyle: {
                            color: '#999'
                        }
                    }
                }
            ],
            yAxis : [
                {
                    type : 'value',
                    min:0,
                    max:200,
                    axisLine: {
                        lineStyle: {
                            type: 'solid',
                            color:'#999',
                            width:'0'
                        }
                    },
                    axisLabel: {
                        textStyle: {
                            color: '#999'
                        }
                    }
                }
            ],
            series : [
                {
                    name:'报废数量',
                    type:'bar',
                    barWidth: '28%',
                    data:["0","0","0","0","0","0","0"],
                }
            ]
        };
        baofei.setOption(option);
    }
    function quX(arr2_1,arr2_2,arr2_3,arr2_4,arr2_5) {
        var weixiuqu = echarts.init(document.getElementById('weixiuqu'));
        option = {
            legend: {
                righr:'10%',

            },
            tooltip: {
                trigger: 'axis',
                showContent: true,
            },
            dataset: {
                source: [arr2_1,arr2_2,arr2_3,arr2_4,arr2_5]
            },
            xAxis: {type: 'category',boundaryGap : false,},
            yAxis: {gridIndex: 0},
            grid: {top: '16%'},
            series: [
                {type: 'line', smooth: true, seriesLayoutBy: 'row',areaStyle : {
                        normal : {
                            color : new echarts.graphic.LinearGradient(0,0,0,1,[
                                {
                                    offset : 0,
                                    color : 'rgba(49, 218, 113, 0.3)'
                                },
                                {
                                    offset : 0.8,
                                    color : 'rgba(49, 218, 113, 0)'
                                } ], false),
                            shadowColor : 'rgba(0, 0, 0, 0.1)',
                            shadowBlur : 10
                        }
                    },
                    //控制线条的颜色
                    itemStyle : {
                        normal : {
                            color : 'rgb(49,218,113)',
                            borderColor : 'rgba(49,218,2,0.27)',
                            borderWidth : 2

                        }
                    }},
                {type: 'line', smooth: true, seriesLayoutBy: 'row',areaStyle : {
                        normal : {
                            color : new echarts.graphic.LinearGradient(0,0,0,1,[
                                {
                                    offset : 0,
                                    color : 'rgba(241,120,12, 0.3)'
                                },
                                {
                                    offset : 0.8,
                                    color : 'rgba(241,120,12, 0)'
                                } ], false),
                            shadowColor : 'rgba(0, 0, 0, 0.1)',
                            shadowBlur : 10
                        }
                    },
                    //控制线条的颜色
                    itemStyle : {
                        normal : {
                            color : 'rgb(241,120,27)',
                            borderColor : 'rgba(241,120,2,0.27)',
                            borderWidth : 2

                        }
                    }},
                {type: 'line', smooth: true, seriesLayoutBy: 'row',areaStyle : {
                        normal : {
                            color : new echarts.graphic.LinearGradient(0,0,0,1,[
                                {
                                    offset : 0,
                                    color : 'rgba(17,143,223, 0.3)'
                                },
                                {
                                    offset : 0.8,
                                    color : 'rgba(17,143,223, 0)'
                                } ], false),
                            shadowColor : 'rgba(0, 0, 0, 0.1)',
                            shadowBlur : 10
                        }
                    },
                    //控制线条的颜色
                    itemStyle : {
                        normal : {
                            color : 'rgb(17,143,223)',
                            borderColor : 'rgba(17,143,2,0.27)',
                            borderWidth : 2

                        }
                    }},
                {type: 'line', smooth: true, seriesLayoutBy: 'row',areaStyle : {
                        normal : {
                            color : new echarts.graphic.LinearGradient(0,0,0,1,[
                                {
                                    offset : 0,
                                    color : 'rgba(190,95,233, 0.3)'
                                },
                                {
                                    offset : 0.8,
                                    color : 'rgba(190,95,233, 0)'
                                } ], false),
                            shadowColor : 'rgba(0, 0, 0, 0.1)',
                            shadowBlur : 10
                        }
                    },
                    //控制线条的颜色
                    itemStyle : {
                        normal : {
                            color : 'rgb(190,95,233)',
                            borderColor : 'rgba(190,95,2,0.27)',
                            borderWidth : 2

                        }
                    }},
            ]
        };
        weixiuqu.setOption(option);

    }




    function doresize(){
        var maps = echarts.init(document.getElementById('mapadd'));
        maps.resize();

    }

    //owl carousel

    $(document).ready(function() {
        $("#owl-demo").owlCarousel({
            navigation : true,
            slideSpeed : 300,
            paginationSpeed : 400,
            singleItem : true

        });
    });

    //custom select box

    $(function(){
        $('select.styled').customSelect();
    });





</script>


</body>
</html>
