<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.manage.idc.task.mapper.ScrapTaskMapper">
  <resultMap id="BaseResultMap" type="com.manage.idc.task.domain.ScrapTask">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="task_type" jdbcType="INTEGER" property="taskType" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, task_name, remark, task_type, `state`, org_id, is_del, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from scrap_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from scrap_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.manage.idc.task.domain.ScrapTask" useGeneratedKeys="true">
    insert into scrap_task (task_name, remark, task_type, 
      `state`, org_id, is_del, 
      create_time)
    values (#{taskName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{taskType,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{orgId,jdbcType=BIGINT}, #{isDel,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.manage.idc.task.domain.ScrapTask" useGeneratedKeys="true">
    insert into scrap_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.manage.idc.task.domain.ScrapTask">
    update scrap_task
    <set>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.manage.idc.task.domain.ScrapTask">
    update scrap_task
    set task_name = #{taskName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER},
      org_id = #{orgId,jdbcType=BIGINT},
      is_del = #{isDel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByCondition" parameterType="map" resultMap="BaseResultMap">
    SELECT
    ct.*,so.`name` orgName,
    su.name ownerName
    FROM
    scrap_task ct
    LEFT JOIN sys_org so ON so.id = ct.org_id
    LEFT JOIN  sys_user su on su.id=ct.user_id
    <where>
      <if test="data.orgId!=null">
        and  (so.parent_id=#{data.orgId} or so.id=#{data.orgId})
      </if>
      <if test="data.isDel!=null">
        and ct.is_del=#{data.isDel}
      </if>
      <if test="data.state!=null">
        and ct.state=#{data.state}
      </if>
      <if test="data.taskName!=null">
        and ct.taskName like concat('%',#{data.taskName},'%')
      </if>
    </where>
  </select>

  <select id="getScrapTaskPage" parameterType="map" resultMap="BaseResultMap">
    SELECT
    ct.*,so.`name` orgName,
    su.name ownerName,
    rm.name roomName
    FROM
    scrap_task ct
    LEFT JOIN sys_org so ON so.id = ct.org_id
    LEFT JOIN sys_user su ON su.id=ct.user_id
    LEFT JOIN room rm ON rm.id=ct.room_id
    <where>
      <if test="data.orgId!=null">
        and  (so.parent_id=#{data.orgId} or so.id=#{data.orgId})
      </if>
      <if test="data.isDel!=null">
        and ct.is_del=#{data.isDel}
      </if>
      <if test="data.state!=null">
        and ct.state=#{data.state}
      </if>
      <if test="data.queryName!=null">
        and (ct.task_name like concat('%',#{data.queryName},'%') or ct.id like concat('%',#{data.queryName},'%'))
      </if>
    </where>
  </select>
</mapper>